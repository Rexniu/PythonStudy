习题：
写一个正则表达式，能匹配出多种格式的电话号码，包括
(021)88776543
010-55667890
02584453362
0571 66345673

一个可以匹配出所有结果的表达式是
\(?0\d{2,3}[)-]?\d{7,8}

\(?
()在正则表示里也有着特殊的含义，所以要匹配字符“(”,需要转义，?表示这个括号是可有可无的
0\d{2,3}
区号，0xx或者0xxx
[)-]?
在区号之后跟着的可能是")"、" "、"-",也可能什么也没有。
\d{7,8}
7或8位的电话号码

这个表达式能够匹配出所有正确的数据。但理论上也会匹配到错误的数据，因为()应当是成对出现的，
表达式中对于左右两个括号并没有做关联处理。例如(01234567890这样的受也是符合条件的。
我们可以用正则表达式中的'|'符号解决这种问题。“|”相当于python中“or”的作用，它连接的两个表达式，只要满足其中之一，就会被算作匹配成功。

这样把()的情况单独分离出来：
\(0\d{2,3}\)\d{7,8}

其他情况:
0\d{2,3}[ -]?\d{7,8}

合并：\(0\d{2,3}\)\d{7,8} | 0\d{2,3}[ -]?\d{7,8}
使用“|”时，特别注意的是不同条件之间的顺序。匹配时，会按照从左往右的顺序，一旦匹配成功，就停止验证后面的规则。加入匹配的
电话号码还有可能是任意长度的数字。则应在最后加上 |\d+